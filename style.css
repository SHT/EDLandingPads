@font-face {
  font-family: 'Eurostile';
  font-style: normal;
  font-weight: normal;
  src: local('Eurostile'), url('eurostile.woff') format('woff');
}
html,
body {
  margin: 0;
  height: 100vh;
  user-select: none;
  background-color: #fff;
}
.container {
  position: absolute;
  width: 80vh;
  height: 80vh;
  z-index: 0;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
}
.container .interior {
  position: absolute;
  width: 100%;
  height: 100%;
  overflow: hidden;
}
.container .interior .layer,
.container .interior .inner {
  position: absolute;
  width: 100%;
  height: 100%;
  transform: rotate(75deg) scale(0.5);
  opacity: 0;
  transition: transform 0.5s ease, opacity 0.5s ease;
  pointer-events: none;
}
.container .interior .layer.load,
.container .interior .inner.load {
  transform: rotate(75deg) scale(1);
  opacity: 1;
}
.container .interior .layer svg,
.container .interior .inner svg {
  top: 50%;
  left: 50%;
  position: absolute;
  width: 50%;
  height: 50%;
  transform-origin: 0% 0% !important;
  pointer-events: none;
}
.container .interior .layer.layer.l0,
.container .interior .inner.layer.l0 {
  z-index: 1;
}
.container .interior .layer.layer.l0 svg,
.container .interior .inner.layer.l0 svg {
  width: 50%;
  height: 50%;
}
.container .interior .layer.layer.l1,
.container .interior .inner.layer.l1 {
  z-index: 2;
}
.container .interior .layer.layer.l1 svg,
.container .interior .inner.layer.l1 svg {
  width: 41%;
  height: 41%;
}
.container .interior .layer.layer.l2,
.container .interior .inner.layer.l2 {
  z-index: 3;
}
.container .interior .layer.layer.l2 svg,
.container .interior .inner.layer.l2 svg {
  width: 33%;
  height: 33%;
}
.container .interior .layer.layer.l3,
.container .interior .inner.layer.l3 {
  z-index: 4;
}
.container .interior .layer.layer.l3 svg,
.container .interior .inner.layer.l3 svg {
  width: 26%;
  height: 26%;
}
.container .interior .layer.layer.l4,
.container .interior .inner.layer.l4 {
  z-index: 5;
}
.container .interior .layer.layer.l4 svg,
.container .interior .inner.layer.l4 svg {
  width: 20%;
  height: 20%;
}
.container .interior .layer.layer svg path,
.container .interior .inner.layer svg path {
  pointer-events: all;
  fill: #f2f2f2;
  stroke: #000;
  stroke-width: 10;
  transition: fill 0.15s ease, stroke 0.15s ease;
}
.container .interior .layer.layer svg path:hover,
.container .interior .inner.layer svg path:hover {
  fill: #d8d8da;
}
.container .interior .layer.layer svg path:hover ~ foreignObject p,
.container .interior .inner.layer svg path:hover ~ foreignObject p {
  color: #000;
}
.container .interior .layer.layer svg foreignObject,
.container .interior .inner.layer svg foreignObject {
  position: relative;
  transform-origin: 868px 224px;
  border-radius: 50%;
}
.container .interior .layer.layer svg foreignObject p,
.container .interior .inner.layer svg foreignObject p {
  height: 256px;
  width: 256px;
  margin: 0;
  line-height: 256px;
  font-size: 110px;
  font-family: 'eurostile';
  text-align: center;
  color: #2feadd;
  transition: color 0.3s ease;
}
.container .interior .layer.layer svg path.pad.highlighted,
.container .interior .inner.layer svg path.pad.highlighted {
  fill: #2feadd !important;
}
.container .interior .layer.layer svg path.pad.highlighted foreignObject p,
.container .interior .inner.layer svg path.pad.highlighted foreignObject p {
  color: #000 !important;
}
.container .interior .layer.layer svg path.pad.highlighted.small,
.container .interior .inner.layer svg path.pad.highlighted.small {
  fill: #2feadd !important;
}
.container .interior .layer.layer svg path.pad.highlighted.small foreignObject p,
.container .interior .inner.layer svg path.pad.highlighted.small foreignObject p {
  color: #000 !important;
}
.container .interior .layer.layer svg path.pad.highlighted.medium,
.container .interior .inner.layer svg path.pad.highlighted.medium {
  fill: #2feadd !important;
}
.container .interior .layer.layer svg path.pad.highlighted.medium foreignObject p,
.container .interior .inner.layer svg path.pad.highlighted.medium foreignObject p {
  color: #000 !important;
}
.container .interior .layer.layer svg path.pad.highlighted.large,
.container .interior .inner.layer svg path.pad.highlighted.large {
  fill: #2feadd !important;
}
.container .interior .layer.layer svg path.pad.highlighted.large foreignObject p,
.container .interior .inner.layer svg path.pad.highlighted.large foreignObject p {
  color: #000 !important;
}
.container .interior .layer.layer svg path.pad.highlighted:hover.small,
.container .interior .inner.layer svg path.pad.highlighted:hover.small {
  fill: #fca522 !important;
}
.container .interior .layer.layer svg path.pad.highlighted:hover.medium,
.container .interior .inner.layer svg path.pad.highlighted:hover.medium {
  fill: #0e9bad !important;
}
.container .interior .layer.layer svg path.pad.highlighted:hover.large,
.container .interior .inner.layer svg path.pad.highlighted:hover.large {
  fill: #de0d26 !important;
}
.container .interior .layer.inner,
.container .interior .inner.inner {
  z-index: 6;
}
.container .interior .layer.inner svg,
.container .interior .inner.inner svg {
  width: 25%;
  height: 25%;
  top: 37.5%;
  left: 37.5%;
  transform: rotate(15deg) scale(1.15);
  transform-origin: 50% 50% !important;
}
.container .interior .layer.inner svg path,
.container .interior .inner.inner svg path {
  fill: #eaeaea;
  stroke: #000;
  stroke-width: 6;
  pointer-events: all;
}
.container .interior .layer.inner img,
.container .interior .inner.inner img {
  position: absolute;
  width: 25%;
  height: 25%;
  top: 37.5%;
  transform: scale(1.05) rotate(45deg);
  border-radius: 50%;
  left: 37.5%;
  opacity: 0.075;
}
.container .options {
  position: absolute;
  width: 250px;
  height: 200px;
  bottom: 0;
}
.container .options.mode {
  transform: translateY(27px);
  left: -250px;
}
.container .options.mode .option {
  transform: translateX(40px);
}
.container .options.mode .option:first-child img {
  transform: rotate(180deg);
}
.container .options.mode .option.disabled {
  pointer-events: none;
}
.container .options.mode .option img {
  right: 0;
}
.container .options.mode .option span {
  display: block;
  padding-right: 50px;
  text-align: right;
}
.container .options.size {
  right: -250px;
}
.container .options.size .option {
  transform: translateX(-40px);
}
.container .options.size .option span {
  padding-left: 50px;
}
.container .options .option {
  display: block;
  height: 40px;
  margin-bottom: 15px;
  text-decoration: none;
  opacity: 0;
  transition: transform 0.5s ease, opacity 0.5s ease;
}
.container .options .option.load {
  opacity: 1;
  transform: translateX(0);
}
.container .options .option:hover {
  cursor: pointer;
}
.container .options .option:hover svg {
  stroke: #071621;
}
.container .options .option:hover span {
  color: #2feadd;
}
.container .options .option svg {
  position: absolute;
  width: 40px;
  height: 40px;
  fill: none;
  stroke: #2feadd;
  stroke-width: 15;
}
.container .options .option img {
  position: absolute;
  width: 40px;
  height: 40px;
}
.container .options .option span {
  display: block;
  line-height: 40px;
  font-size: 1.3rem;
  font-family: 'eurostile';
  text-transform: uppercase;
  font-weight: 700;
  color: #2feadd;
}
.container .options .option.small svg {
  transform: scale(0.7) translate(0, -2px);
}
.container .options .option.small.active svg {
  fill: #071621;
}
.container .options .option.small.active span {
  color: #2feadd;
}
.container .options .option.medium svg {
  transform: scale(0.7) translate(-2px, -3px);
}
.container .options .option.medium.active svg {
  fill: #40a0ac;
}
.container .options .option.medium.active span {
  color: #2feadd;
}
.container .options .option.large svg {
  transform: scale(0.7) translate(0, -1px);
}
.container .options .option.large.active svg {
  fill: #d22f42;
}
.container .options .option.large.active span {
  color: #2feadd;
}
.container .options .option.clear {
  opacity: 0;
  pointer-events: none;
}
.container .options .option.clear.show {
  opacity: 1;
  pointer-events: all;
  transition: 0.3s ease;
}
/*# sourceMappingURL=style.css.map */